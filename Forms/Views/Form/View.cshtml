@model Forms.DataAccess.Entities.FormEntity
@{
    var theme = (string)ViewBag.Settings.Theme;
    var language = (string)ViewBag.Settings.Language;
    var themes = (List<Forms.DataAccess.Entities.ThemeEntity>)ViewBag.Themes;
}

<!DOCTYPE html>
<html lang="@language">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: @(theme == "dark" ? "#181818" : "#ffffff");
            color: @(theme == "dark" ? "#f5f5f5" : "#000000");
        }

        .container {
            max-width: 600px;
            margin: auto;
        }

        .card {
            background-color: @(theme == "dark" ? "#252525" : "#ffffff");
            border: 1px solid @(theme == "dark" ? "#3d3d3d" : "#dddddd");
            color: @(theme == "dark" ? "#ffffff" : "#000000");
        }

        .question {
            background-color: @(theme == "dark" ? "#303030" : "#ffffff");
            border: 1px solid @(theme == "dark" ? "#4a4a4a" : "#dddddd");
            transition: transform 0.2s ease;
            color: @(theme == "dark" ? "#ffffff" : "#000000");
        }

        .template-header {
            background-color: @(theme == "dark" ? "#252525" : "#ffffff");
            border: 1px solid @(theme == "dark" ? "#3d3d3d" : "#dddddd");
            color: @(theme == "dark" ? "#ffffff" : "#000000");
        }

        p.text-muted {
            color: @(theme == "dark" ? "#bbbbbb" : "#6c757d") !important;
        }

        .selected-item {
            background-color: @(theme == "dark" ? "#252525" : "#f1f1f1");
            color: @(theme == "dark" ? "#ffffff" : "#000000");
        }

        .btn-group {
            margin-top: 10px;
            display: flex;
            justify-content: space-between;
        }

            .btn-group .btn {
                width: 48%;
            }

        .header-image {
            width: 100%;
            height: 200px;
            object-fit: cover;
            border-radius: 8px 8px 0 0;
        }
    </style>
</head>
<body>
    <div class="container mt-4">
        @if (!string.IsNullOrEmpty(Model.Template.ImageURL))
        {
            <div class="header-image-container mb-4">
                <img src="@Model.Template.ImageURL" class="header-image" alt="Template header image">
            </div>
        }
        <div class="card p-3 mb-4">
            <h3 class="mb-1">@Model.Template.Title</h3>
            <p class="text-muted">@Model.Template.Description</p>
        </div>
        <div class="card mb-3 p-3">
            <label class="form-label fw-bold">@(language == "ru" ? "Пользователь" : "User")<span class="text-danger">*</span></label>
            <input type="text" class="form-control" value="@Model.FilledBy.Username" disabled>
        </div>
        <div class="card mb-3 p-3">
            <label class="form-label fw-bold">@(language == "ru" ? "Дата" : "Date")<span class="text-danger">*</span></label>
            <input type="text" class="form-control" value="@Model.FilledAt.ToLongDateString()" disabled>
        </div>
        @foreach (var question in Model.Template.Questions.OrderBy(q => q.Order))
        {
            <div class="card mb-3 p-3">
                <label class="form-label fw-bold">@question.Title</label>
                @if (!string.IsNullOrEmpty(question.Description))
                {
                    <p class="text-muted">@question.Description</p>
                }

                @switch ((int)question.Type)
                {
                    case 0:
                        <input type="text" class="form-control" value="@(Model?.Answers?.FirstOrDefault(a => a.QuestionId == question.Id)?.Value)" disabled>
                        break;

                    case 1:
                        <textarea class="form-control" rows="3" disabled>@(Model?.Answers?.FirstOrDefault(a => a.QuestionId == question.Id)?.Value)</textarea>
                        break;

                    case 2:
                        <input type="number" class="form-control" value="@(Model?.Answers?.FirstOrDefault(a => a.QuestionId == question.Id)?.Value ?? "0")" disabled>
                        break;

                    case 3:
                        <div class="options-group">
                            @foreach (var option in question.Options)
                            {
                                var answerOptions = Model?.Answers?.FirstOrDefault(a => a.QuestionId == question.Id)?.Value.Split(",");
                                var isChecked = answerOptions?.Contains(option.Id.ToString());
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" @(isChecked == true ? "checked" : "") disabled>
                                    <label class="form-check-label">@option.Text</label>
                                </div>
                            }
                        </div>
                        break;
                }
            </div>
        }
        <div class="text-center mt-4">
            <a href="@Url.Action("Profile", "Account")" class="btn btn-secondary">@(language == "ru" ? "Назад" : "Back")</a>
        </div>
    </div>
</body>
</html>